name: Build docker image

on: 
  pull_request:

env:
  GHCR_REGISTRY: ghcr.io
  GHCR_REGISTRY_REPO: ${{ secrets.GHCR_REPO }}
  DOCKERFILE_PATH: Dockerfile

jobs:
  build-dev-docker-image:
    runs-on: ubuntu-latest
    steps:   
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: Get repository name
        id: get_repo_name
        run: |
          result=$(echo "$GITHUB_REPOSITORY" | awk -F'/' '{print $2}')
          echo "repo_name=$result" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3

      - name: Configure Docker
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ secrets.CI_BOT_USERNAME }}
          password: ${{ secrets.CI_BOT_TOKEN }}
      
      - name: Build and Push Docker image
        run: |
          docker buildx build --push --platform linux/arm64,linux/amd64 -t ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REGISTRY_REPO }}/${{ steps.get_repo_name.outputs.repo_name }}:pr-${{ github.event.pull_request.number }} .
      
      # Setup and run vulnerability scanner
      - name: Setup trivy markdown template
        run: |
          cat <<EOF | tee github-markdown.tpl
            {{- if . }}
            {{- range . }}
            <h3>Target <code>{{ escapeXML .Target }}</code></h3>
            {{- if (eq (len .Vulnerabilities) 0) }}
            <h4>No Vulnerabilities found</h4>
            {{- else }}
            <h4>Vulnerabilities ({{ len .Vulnerabilities }})</h4>
            <table>
                <tr>
                    <th>Package</th>
                    <th>ID</th>
                    <th>Severity</th>
                    <th>Installed Version</th>
                    <th>Fixed Version</th>
                </tr>
                {{- range .Vulnerabilities }}
                <tr>
                    <td><code>{{ escapeXML .PkgName }}</code></td>
                    <td>{{ escapeXML .VulnerabilityID }}</td>
                    <td>{{ escapeXML .Severity }}</td>
                    <td>{{ escapeXML .InstalledVersion }}</td>
                    <td>{{ escapeXML .FixedVersion }}</td> 
                </tr>
                {{- end }}
            </table>
            {{- end }}
            {{- if (eq (len .Misconfigurations ) 0) }}
            <h4>No Misconfigurations found</h4>
            {{- else }}
            <h4>Misconfigurations</h4>
            <table>
                <tr>
                    <th>Type</th>
                    <th>ID</th>
                    <th>Check</th>
                    <th>Severity</th>
                    <th>Message</th>
                </tr>
                {{- range .Misconfigurations }}
                <tr>
                    <td>{{ escapeXML .Type }}</td>
                    <td>{{ escapeXML .ID }}</td>
                    <td>{{ escapeXML .Title }}</td>
                    <td>{{ escapeXML .Severity }}</td>
                    <td>
                      {{ escapeXML .Message }}
                      <br><a href={{ escapeXML .PrimaryURL | printf "%q" }}>{{ escapeXML .PrimaryURL }}</a></br>
                    </td>
                </tr>
                {{- end }}
            </table>
            {{- end }}
            {{- end }}
            {{- else }}
            <h3>Trivy Returned Empty Report</h3>
            {{- end }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        id: trivy_scanner
        with:
          image-ref: ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REGISTRY_REPO }}/${{ steps.get_repo_name.outputs.repo_name }}:pr-${{ github.event.pull_request.number }}
          format: template
          template: "@github-markdown.tpl"
          output: "trivy.md"
          vuln-type: 'os,library'
          # severity: 'CRITICAL,HIGH'

      - name: Summary report trivy
        run: cat trivy.md >> $GITHUB_STEP_SUMMARY
      
      - name: Generate Token
        uses: actions/create-github-app-token@3378cda945da322a8db4b193e19d46352ebe2de5 # v1
        id: app-token
        with:
          app-id: "${{ secrets.BOT_APP_ID }}"
          private-key: "${{ secrets.BOT_APP_PRIV_KEY }}"

      - name: Push trivy comment on PR
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-path: 'trivy.md'
          token: ${{ steps.app-token.outputs.token }}