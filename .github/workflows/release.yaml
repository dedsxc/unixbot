name: Release

on:
  push:
    branches:
      - main
      - master

env:
  GHCR_REGISTRY: ghcr.io
  GHCR_REGISTRY_REPO: ${{ secrets.GHCR_REPO }}
  DOCKERFILE_PATH: Dockerfile

jobs:
  check-dockerfile:
    runs-on: ubuntu-latest
    outputs:
      is_dockerfile_exist: ${{ steps.dockerfile.outputs.files_exists }}
    steps: 
      - name: Checkout code
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4

      - name: Check if Dockerfile exist
        id: dockerfile
        uses: andstor/file-existence-action@076e0072799f4942c8bc574a82233e1e4d13e9d6 # v3
        with:
          files: "Dockerfile"

  stable-tag:
    runs-on: ubuntu-latest
    needs: [check-dockerfile]
    if: needs.check-dockerfile.outputs.is_dockerfile_exist == 'true'
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
      new_changelog: ${{ steps.tag_version.outputs.changelog }}
      previous_tag: ${{ steps.tag_version.outputs.previous_tag }}
    steps:
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@a22cf08638b34d5badda920f9daf6e72c477b07b # v6.2
        with:
          github_token: ${{ secrets.CI_BOT_TOKEN }}
          release_branches: master,main
          # Generate specific tag for pre-release
          pre_release_branches: "^(?!main$|master$).*$"
          # Dont tag if the commit is not a patch, minor or major
          default_bump: false
          # Set tag as x.x.x
          tag_prefix: ""

  build-docker-image:
    runs-on: ubuntu-latest
    needs: [stable-tag]
    # Run only if there is tag generated from previous jobs
    if: ${{ needs.stable-tag.outputs.new_tag }}
    steps:   
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get repository name
        id: get_repo_name
        run: |
          result=$(echo "$GITHUB_REPOSITORY" | awk -F'/' '{print $2}')
          echo "repo_name=$result" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3
    
      - name: Configure Docker
        uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7 # v1
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ secrets.CI_BOT_USERNAME }}
          password: ${{ secrets.CI_BOT_TOKEN }}
      
      - name: Build and Push Docker image
        run: |
          docker buildx build --push --platform linux/arm64,linux/amd64 -t ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REGISTRY_REPO }}/${{ steps.get_repo_name.outputs.repo_name }}:${{ needs.stable-tag.outputs.new_tag }} .
  
  release:
    runs-on: ubuntu-latest
    needs: [stable-tag, build-docker-image]
    if: needs.stable-tag.outputs.new_tag
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Generate Token
        uses: actions/create-github-app-token@c8f55efbd427e7465d6da1106e7979bc8aaee856 # v1
        id: app-token
        with:
          app-id: "${{ secrets.BOT_APP_ID }}"
          private-key: "${{ secrets.BOT_APP_PRIV_KEY }}"

      - name: Create a GitHub release
        uses: ncipollo/release-action@2c591bcc8ecdcd2db72b97d6147f871fcd833ba5 # v1
        with:
          tag: ${{ needs.stable-tag.outputs.new_tag }}
          name: ${{ needs.stable-tag.outputs.new_tag }}
          body: ${{ needs.stable-tag.outputs.new_changelog }}
          token: ${{ steps.app-token.outputs.token }}